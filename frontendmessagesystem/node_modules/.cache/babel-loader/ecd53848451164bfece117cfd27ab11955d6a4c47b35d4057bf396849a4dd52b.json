{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miki\\\\Desktop\\\\frontendmessagesystem\\\\src\\\\screens\\\\MessagesBoxScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Store } from \"../Store\";\nimport { Helmet } from \"react-helmet-async\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      console.log(state);\n      return {\n        ...state,\n        loading: true\n      };\n    case \"FETCH_SUCCESS\":\n      console.log(state, action.payload);\n      return {\n        ...state,\n        messages: action.payload,\n        loading: false\n      };\n    case \"FETCH_FAIL\":\n      console.log(state, action.type, action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\nconst MessagesBoxScreen = () => {\n  _s();\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const navigate = useNavigate();\n  const [{\n    loading,\n    error,\n    messages\n  }, dispatch] = useReducer(reducer, {\n    messages: [],\n    loading: true,\n    error: \"\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_REQUEST\"\n      });\n      try {\n        const result = await axios.get(\"http://127.0.0.1:8000/api/messages/\", {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: result.data\n        });\n        console.log(result.data);\n      } catch (err) {\n        dispatch({\n          type: \"FETCH_FAIL\",\n          payload: err.message\n        });\n      }\n    };\n    fetchData();\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-list\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: message.subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created on: \", message.creation_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"From: \", message.sender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"To: \", message.receiver]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesBoxScreen, \"ZUC+79ZJ4VJTP7w8aZr82LVNzds=\", false, function () {\n  return [useNavigate];\n});\n_c = MessagesBoxScreen;\nexport default MessagesBoxScreen;\nvar _c;\n$RefreshReg$(_c, \"MessagesBoxScreen\");","map":{"version":3,"names":["React","useContext","useEffect","useReducer","useNavigate","axios","Store","Helmet","jsxDEV","_jsxDEV","reducer","state","action","type","console","log","loading","payload","messages","error","MessagesBoxScreen","_s","userInfo","navigate","dispatch","fetchData","result","get","headers","Authorization","token","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","subject","content","creation_date","sender","receiver","id","_c","$RefreshReg$"],"sources":["C:/Users/miki/Desktop/frontendmessagesystem/src/screens/MessagesBoxScreen.js"],"sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Store } from \"../Store\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_REQUEST\":\r\n      console.log(state);\r\n      return { ...state, loading: true };\r\n    case \"FETCH_SUCCESS\":\r\n      console.log(state, action.payload);\r\n      return { ...state, messages: action.payload, loading: false };\r\n    case \"FETCH_FAIL\":\r\n      console.log(state, action.type, action.payload);\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst MessagesBoxScreen = () => {\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const navigate = useNavigate();\r\n  const [{ loading, error, messages }, dispatch] = useReducer(reducer, {\r\n    messages: [],\r\n    loading: true,\r\n    error: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch({ type: \"FETCH_REQUEST\" });\r\n      try {\r\n        const result = await axios.get(\"http://127.0.0.1:8000/api/messages/\",\r\n        { headers: { Authorization: `Bearer ${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\r\n        console.log(result.data);\r\n      } catch (err) {\r\n        dispatch({ type: \"FETCH_FAIL\", payload: err.message });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Messages</title>\r\n      </Helmet>\r\n      <div className=\"messages-list\">\r\n        {messages.map((message) => (\r\n          <div key={message.id}>\r\n            <h3>{message.subject}</h3>\r\n            <p>{message.content}</p>\r\n            <p>Created on: {message.creation_date}</p>\r\n            <p>From: {message.sender}</p>\r\n            <p>To: {message.receiver}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesBoxScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAChE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,UAAU;AAChC,SAASC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClBC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;MAClB,OAAO;QAAE,GAAGA,KAAK;QAAEK,OAAO,EAAE;MAAK,CAAC;IACpC,KAAK,eAAe;MAClBF,OAAO,CAACC,GAAG,CAACJ,KAAK,EAAEC,MAAM,CAACK,OAAO,CAAC;MAClC,OAAO;QAAE,GAAGN,KAAK;QAAEO,QAAQ,EAAEN,MAAM,CAACK,OAAO;QAAED,OAAO,EAAE;MAAM,CAAC;IAC/D,KAAK,YAAY;MACfF,OAAO,CAACC,GAAG,CAACJ,KAAK,EAAEC,MAAM,CAACC,IAAI,EAAED,MAAM,CAACK,OAAO,CAAC;MAC/C,OAAO;QAAE,GAAGN,KAAK;QAAEQ,KAAK,EAAEP,MAAM,CAACK,OAAO;QAAED,OAAO,EAAE;MAAM,CAAC;IAC5D;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEV;EAAM,CAAC,GAAGV,UAAU,CAACK,KAAK,CAAC;EACnC,MAAM;IAAEgB;EAAS,CAAC,GAAGX,KAAK;EAC1B,MAAMY,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC;IAAEY,OAAO;IAAEG,KAAK;IAAED;EAAS,CAAC,EAAEM,QAAQ,CAAC,GAAGrB,UAAU,CAACO,OAAO,EAAE;IACnEQ,QAAQ,EAAE,EAAE;IACZF,OAAO,EAAE,IAAI;IACbG,KAAK,EAAE;EACT,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACd,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BD,QAAQ,CAAC;QAAEX,IAAI,EAAE;MAAgB,CAAC,CAAC;MACnC,IAAI;QACF,MAAMa,MAAM,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,qCAAqC,EACpE;UAAEC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASP,QAAQ,CAACQ,KAAM;UAAE;QAAE,CACzD,CAAC;QACDN,QAAQ,CAAC;UAAEX,IAAI,EAAE,eAAe;UAAEI,OAAO,EAAES,MAAM,CAACK;QAAK,CAAC,CAAC;QACzDjB,OAAO,CAACC,GAAG,CAACW,MAAM,CAACK,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZR,QAAQ,CAAC;UAAEX,IAAI,EAAE,YAAY;UAAEI,OAAO,EAAEe,GAAG,CAACC;QAAQ,CAAC,CAAC;MACxD;IACF,CAAC;IACDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACEb,OAAA;IAAAyB,QAAA,gBACEzB,OAAA,CAACF,MAAM;MAAA2B,QAAA,eACLzB,OAAA;QAAAyB,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACT7B,OAAA;MAAK8B,SAAS,EAAC,eAAe;MAAAL,QAAA,EAC3BhB,QAAQ,CAACsB,GAAG,CAAEP,OAAO,iBACpBxB,OAAA;QAAAyB,QAAA,gBACEzB,OAAA;UAAAyB,QAAA,EAAKD,OAAO,CAACQ;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1B7B,OAAA;UAAAyB,QAAA,EAAID,OAAO,CAACS;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB7B,OAAA;UAAAyB,QAAA,GAAG,cAAY,EAACD,OAAO,CAACU,aAAa;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1C7B,OAAA;UAAAyB,QAAA,GAAG,QAAM,EAACD,OAAO,CAACW,MAAM;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7B7B,OAAA;UAAAyB,QAAA,GAAG,MAAI,EAACD,OAAO,CAACY,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GALrBL,OAAO,CAACa,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5CID,iBAAiB;EAAA,QAGJhB,WAAW;AAAA;AAAA2C,EAAA,GAHxB3B,iBAAiB;AA8CvB,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
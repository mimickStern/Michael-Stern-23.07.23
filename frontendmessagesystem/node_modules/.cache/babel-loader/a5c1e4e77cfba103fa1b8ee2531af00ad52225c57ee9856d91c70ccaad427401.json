{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miki\\\\Desktop\\\\MessageSystem\\\\frontendmessagesystem\\\\src\\\\components\\\\MessageTabs.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Tabs, Tab, TabPane } from \"react-bootstrap\";\nimport { Store } from \"../Store\";\nimport MessagesBoxScreen from \"../screens/MessagesBoxScreen\";\nimport ProtectedRoute from \"../components/ProtectedRoute\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageTabs = ({\n  activeTab,\n  handleTabChange\n}) => {\n  _s();\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  console.log(userInfo);\n  const [username, setUsername] = useState(\"\");\n  useEffect(() => {\n    // Check if userInfo is available and not empty\n    if (userInfo && userInfo.access) {\n      // Decode the JWT token\n      const decodedToken = jwt_decode(userInfo.access);\n      // Extract the username from the decoded token\n      const decodedUsername = decodedToken.username;\n      // Set the username state\n      setUsername(decodedUsername);\n    }\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(Tabs, {\n    defaultActiveKey: activeTab,\n    onSelect: tab => handleTabChange(tab),\n    animation: userInfo ? \"false\" : undefined // Provide animation prop conditionally\n    ,\n    id: \"noanim-tab-example\",\n    children: userInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n        eventKey: \"received\",\n        title: \"Received Messages\",\n        children: activeTab === \"received\" && /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(MessagesBoxScreen, {\n            messageType: \"received\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        eventKey: \"sent\",\n        title: \"Sent Messages\",\n        children: activeTab === \"sent\" && /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(MessagesBoxScreen, {\n            messageType: \"sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        eventKey: \"read\",\n        title: \"Read Messages\",\n        children: activeTab === \"read\" && /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(MessagesBoxScreen, {\n            messageType: \"read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        eventKey: \"unread\",\n        title: \"Unread Messages\",\n        children: activeTab === \"unread\" && /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(MessagesBoxScreen, {\n            messageType: \"unread\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        eventKey: \"create\",\n        title: \"Create Message\",\n        children: activeTab === \"create\" && /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(MessagesBoxScreen, {\n            messageType: \"create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n_s(MessageTabs, \"ywwEmxAT/0wIf9u77i30+IHcmDo=\");\n_c = MessageTabs;\nexport default MessageTabs;\nvar _c;\n$RefreshReg$(_c, \"MessageTabs\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Tabs","Tab","TabPane","Store","MessagesBoxScreen","ProtectedRoute","jwt_decode","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageTabs","activeTab","handleTabChange","_s","state","userInfo","console","log","username","setUsername","access","decodedToken","decodedUsername","defaultActiveKey","onSelect","tab","animation","undefined","id","children","eventKey","title","messageType","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/miki/Desktop/MessageSystem/frontendmessagesystem/src/components/MessageTabs.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Tabs, Tab, TabPane } from \"react-bootstrap\";\r\nimport { Store } from \"../Store\";\r\nimport MessagesBoxScreen from \"../screens/MessagesBoxScreen\";\r\nimport ProtectedRoute from \"../components/ProtectedRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst MessageTabs = ({ activeTab, handleTabChange }) => {\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n  console.log(userInfo)\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Check if userInfo is available and not empty\r\n    if (userInfo && userInfo.access) {\r\n      // Decode the JWT token\r\n      const decodedToken = jwt_decode(userInfo.access);\r\n      // Extract the username from the decoded token\r\n      const decodedUsername = decodedToken.username;\r\n      // Set the username state\r\n      setUsername(decodedUsername);\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n      <Tabs\r\n        defaultActiveKey={activeTab}\r\n        onSelect={(tab) => handleTabChange(tab)}\r\n        animation={userInfo ? \"false\" : undefined} // Provide animation prop conditionally\r\n        id=\"noanim-tab-example\"\r\n      >\r\n        {userInfo && (\r\n          \r\n            <>\r\n            <TabPane eventKey=\"received\" title=\"Received Messages\">\r\n                      {activeTab === \"received\" && (\r\n                          <ProtectedRoute>\r\n                              <MessagesBoxScreen messageType=\"received\" />\r\n                          </ProtectedRoute>\r\n                      )}\r\n                  </TabPane><TabPane eventKey=\"sent\" title=\"Sent Messages\">\r\n                          {activeTab === \"sent\" && (\r\n                              <ProtectedRoute>\r\n                                  <MessagesBoxScreen messageType=\"sent\" />\r\n                              </ProtectedRoute>\r\n                          )}\r\n                      </TabPane><TabPane eventKey=\"read\" title=\"Read Messages\">\r\n                          {activeTab === \"read\" && (\r\n                              <ProtectedRoute>\r\n                                  <MessagesBoxScreen messageType=\"read\" />\r\n                              </ProtectedRoute>\r\n                          )}\r\n                      </TabPane><TabPane eventKey=\"unread\" title=\"Unread Messages\">\r\n                          {activeTab === \"unread\" && (\r\n                              <ProtectedRoute>\r\n                                  <MessagesBoxScreen messageType=\"unread\" />\r\n                              </ProtectedRoute>\r\n                          )}\r\n                      </TabPane><TabPane eventKey=\"create\" title=\"Create Message\">\r\n                          {activeTab === \"create\" && (\r\n                              <ProtectedRoute>\r\n                                  <MessagesBoxScreen messageType=\"create\" />\r\n                              </ProtectedRoute>\r\n                          )}\r\n                      </TabPane></>\r\n          \r\n        )}\r\n      </Tabs>\r\n    \r\n  );\r\n};\r\n\r\nexport default MessageTabs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}